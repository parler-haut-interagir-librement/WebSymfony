<?php

declare(strict_types=1);

$finder = PhpCsFixer\Finder::create()
                           ->in(__DIR__)
                           ->exclude('var')
    // exclude files generated by Symfony Flex recipes
                           ->notPath('bin/console')
                           ->notPath('config/bundles.php')
                           ->notPath('public/index.php')
                           ->notPath('importmap.php')
;

return (new PhpCsFixer\Config())->setRules([
                                               '@PhpCsFixer'                                 => true,
                                               '@PHP83Migration'                             => true,
                                               '@Symfony'                                    => true,
                                               // https://cs.symfony.com/doc/ruleSets/Symfony.html
                                               '@Symfony:risky'                              => true,
                                               'array_syntax'                                => ['syntax' => 'short'],
                                               'cast_spaces'                                 => ['space' => 'single'],
                                               'concat_space'                                => ['spacing' => 'one'],
                                               'declare_strict_types'                        => true,
                                               // https://cs.symfony.com/doc/rules/strict/declare_strict_types.html
                                               'global_namespace_import'                     => [
                                                   'import_classes'   => true,
                                                   'import_constants' => true,
                                                   'import_functions' => true,
                                               ],
                                               'linebreak_after_opening_tag'                 => true,
                                               'mb_str_functions'                            => true,
                                               'multiline_whitespace_before_semicolons'      => ['strategy' => 'new_line_for_chained_calls'],
                                               'no_multiline_whitespace_around_double_arrow' => false,
                                               'no_php4_constructor'                         => true,
                                               'no_superfluous_phpdoc_tags'                  => true,
                                               'no_unreachable_default_argument_value'       => true,
                                               'no_useless_else'                             => true,
                                               'no_useless_return'                           => true,
                                               // # Needed to avoid messing with @var annotations for PHPStan
                                               'phpdoc_to_comment'                           => false,
                                               // https://cs.symfony.com/doc/rules/phpdoc/phpdoc_to_comment.html
                                               'php_unit_strict'                             => true,
                                               'phpdoc_order'                                => true,
                                               'semicolon_after_instruction'                 => true,
                                               'strict_comparison'                           => true,
                                               'strict_param'                                => true,
                                               'whitespace_after_comma_in_array'             => ['ensure_single_space' => true],
                                               'yoda_style'                                  => true,
                                               // https://cs.symfony.com/doc/rules/control_structure/yoda_style.html

                                           ])
                                ->setFinder($finder)
;
